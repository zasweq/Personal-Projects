from sklearn.naive_bayes import *
from sklearn.dummy import *
from sklearn.ensemble import *
from sklearn.neighbors import *
from sklearn.tree import *
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.feature_extraction.text import HashingVectorizer
from sklearn.calibration import *
from sklearn.linear_model import *
from sklearn.multiclass import *
from sklearn.svm import *
import pandas

def perform(classifiers, vectorizers, train_data, test_data):
    for classifier in classifiers: #iterates through all classifiers and vectorizers
        for vectorizer in vectorizers:
            string = ''
            string += classifier.__class__.__name__ + ' with ' + vectorizer.__class__.__name__ #idk what class name means

            #train
            vectorize_text = vectorizer.fit_transform(train_data.v2) #v2 is second column of the csv file
            classifier.fit(vectorize_text, train_data.v1)            #from the array that you created, teach it to classify it to be spam or not spam

            #score
            vectorize_text = vectorizer.transform(test_data.v2) #transform and not fit_tranform because fit was used to generate model parameters from training data
            score = classifier.score(vectorize_text, test_data.v1)
            string += '. Has score: ' + str(score)
            print(string)

data = []
#open data set, seperate it into learn and test
data = pandas.read_csv('C:\\Users\\Zach\\PycharmProjects\\messageclassification\\spam.csv', encoding = 'latin-1') #encoding latin 1 is English characters, what character set to build array
learn = data[:4400] #80% of data used for learning, you can change this variable
test = data[4400:] #20% of data used for learning
#print(learn)
#print(test)
#print(learn.v2)

perform(
    [
        BernoulliNB(), #naive bayes classifier
        # considers features to contribute independently, regardless of correlations between feature
        RandomForestClassifier(n_estimators=100, n_jobs=-1),
        AdaBoostClassifier(),
        BaggingClassifier(),
        ExtraTreesClassifier(),
        GradientBoostingClassifier(),
        DecisionTreeClassifier(),
        CalibratedClassifierCV(),
        DummyClassifier(),
        PassiveAggressiveClassifier(),
        RidgeClassifier(),
        RidgeClassifierCV(),
        SGDClassifier(),
        OneVsRestClassifier(SVC(kernel='linear')),
        OneVsRestClassifier(LogisticRegression()),
        KNeighborsClassifier()
    ],
    [
        CountVectorizer(),
        TfidfVectorizer(),
        HashingVectorizer(),
    ],
    learn,
    test)

"""BernoulliNB with CountVectorizer. Has score: 0.9778156996587031
BernoulliNB with TfidfVectorizer. Has score: 0.9778156996587031
BernoulliNB with HashingVectorizer. Has score: 0.8728668941979523
RandomForestClassifier with CountVectorizer. Has score: 0.9744027303754266
RandomForestClassifier with TfidfVectorizer. Has score: 0.9744027303754266
RandomForestClassifier with HashingVectorizer. Has score: 0.9658703071672355
AdaBoostClassifier with CountVectorizer. Has score: 0.9684300341296929
AdaBoostClassifier with TfidfVectorizer. Has score: 0.9701365187713311
AdaBoostClassifier with HashingVectorizer. Has score: 0.9735494880546075
BaggingClassifier with CountVectorizer. Has score: 0.9658703071672355
BaggingClassifier with TfidfVectorizer. Has score: 0.962457337883959
BaggingClassifier with HashingVectorizer. Has score: 0.9692832764505119
ExtraTreesClassifier with CountVectorizer. Has score: 0.9761092150170648
ExtraTreesClassifier with TfidfVectorizer. Has score: 0.9761092150170648
ExtraTreesClassifier with HashingVectorizer. Has score: 0.9650170648464164
GradientBoostingClassifier with CountVectorizer. Has score: 0.9709897610921502
GradientBoostingClassifier with TfidfVectorizer. Has score: 0.9675767918088737
GradientBoostingClassifier with HashingVectorizer. Has score: 0.9709897610921502
DecisionTreeClassifier with CountVectorizer. Has score: 0.9675767918088737
DecisionTreeClassifier with TfidfVectorizer. Has score: 0.9633105802047781
DecisionTreeClassifier with HashingVectorizer. Has score: 0.9598976109215017
CalibratedClassifierCV with CountVectorizer. Has score: 0.9863481228668942
CalibratedClassifierCV with TfidfVectorizer. Has score: 0.985494880546075
CalibratedClassifierCV with HashingVectorizer. Has score: 0.9820819112627986
DummyClassifier with CountVectorizer. Has score: 0.7525597269624573
DummyClassifier with TfidfVectorizer. Has score: 0.7610921501706485
DummyClassifier with HashingVectorizer. Has score: 0.7824232081911263
PassiveAggressiveClassifier with CountVectorizer. Has score: 0.9837883959044369
PassiveAggressiveClassifier with TfidfVectorizer. Has score: 0.984641638225256
PassiveAggressiveClassifier with HashingVectorizer. Has score: 0.9837883959044369
RidgeClassifier with CountVectorizer. Has score: 0.9820819112627986
RidgeClassifier with TfidfVectorizer. Has score: 0.9829351535836177
RidgeClassifier with HashingVectorizer. Has score: 0.9820819112627986
RidgeClassifierCV with CountVectorizer. Has score: 0.9829351535836177
RidgeClassifierCV with TfidfVectorizer. Has score: 0.9837883959044369
RidgeClassifierCV with HashingVectorizer. Has score: 0.9803754266211604
SGDClassifier with CountVectorizer. Has score: 0.9795221843003413
SGDClassifier with TfidfVectorizer. Has score: 0.9872013651877133
SGDClassifier with HashingVectorizer. Has score: 0.9837883959044369
OneVsRestClassifier with CountVectorizer. Has score: 0.9863481228668942
OneVsRestClassifier with TfidfVectorizer. Has score: 0.9880546075085325
OneVsRestClassifier with HashingVectorizer. Has score: 0.9829351535836177
OneVsRestClassifier with CountVectorizer. Has score: 0.984641638225256
OneVsRestClassifier with TfidfVectorizer. Has score: 0.9752559726962458
OneVsRestClassifier with HashingVectorizer. Has score: 0.9692832764505119
KNeighborsClassifier with CountVectorizer. Has score: 0.9249146757679181
KNeighborsClassifier with TfidfVectorizer. Has score: 0.9633105802047781
KNeighborsClassifier with HashingVectorizer. Has score: 0.9607508532423208
"""
